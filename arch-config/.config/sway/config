# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# $Mod = WINDOWS key or Super key or Mod4
# Mod1 = ALT key
# Control = CTRL key
# Shift = SHIFT key
# Escape = ESCAPE key
# Return = ENTER or RETURN key
# KP_Enter = Keypad Enter
# Pause = PAUSE key
# Print = PRINT key
# Tab = TAB key

### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi -show drun

### Keyboard, Mouse and others configuration
# Keyboard config https://man.archlinux.org/man/xkeyboard-config.7
# Sway input https://man.archlinux.org/man/sway-input.5
input * {
    # Keyboard
    xkb_layout "ch"
    xkb_variant ""
    xkb_model "pc105"
    #xkb_options "grp:win_space_toggle"
    # Touchpad
    tap enabled
    tap_button_map lrm
    scroll_method two_finger
}

### Output configuration

# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
#output * bg $HOME/.cache/backgrounds/desktop.png fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-1 mode 2560x1440@170Hz
output DP-1 scale 1.25
output DP-1 subpixel rgb
output DP-1 adaptive_sync on

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# -c 000000 sets the color in RGB
# use -i to set an image
#exec swayidle -w \
#    timeout 300 'swaylock -f -e -i "$HOME/.cache/backgrounds/lockscreen.png"' \
#    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#    before-sleep 'swaylock -f -e -i "$HOME/.cache/backgrounds/lockscreen.png"'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    #bindsym $mod+Return exec $term
    bindsym ctrl+mod1+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym ctrl+mod1+a exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+o splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+z layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    # TODO haven't ever used this afaik
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    #bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # Resize windows with movement keys
    bindsym $left resize shrink width 10px
    bindsym Shift+$left resize shrink width 20px
    bindsym $down resize shrink height 10px
    bindsym Shift+$down resize shrink height 20px
    bindsym $up resize grow height 10px
    bindsym Shift+$up resize grow height 20px
    bindsym $right resize grow width 10px
    bindsym Shift+$right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Shift+Left resize shrink width 20px
    bindsym Down resize shrink height 10px
    bindsym Shift+Down resize shrink height 20px
    bindsym Up resize grow height 10px
    bindsym Shift+Up resize grow height 20px
    bindsym Right resize grow width 10px
    bindsym Shift+Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

############################################################
#####               Stuff from old config              #####
############################################################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# choose your font
font pango:Noto Mono Regular 9


##############################
#    Applications at boot    #
##############################

#Authentication dialog
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

#nextcloud
exec --no-startup-id nextcloud

# network
exec --no-startup-id nm-applet

# num lock activated
exec_always --no-startup-id numlockx on

#Corectrl
exec --no-startup-id corectrl

#Transmission
#exec --no-startup-id transmission-gtk -m

#Polybar
#exec_always --no-startup-id ~/.config/polybar/launch.sh &

#startup functions
#exec_always --no-startup-id ~/scritps/startup.sh

# Protonmail Bridge
exec --no-startup-id protonmail-bridge -no-window

# Start KopiaUI
exec --no-startup-id /opt/KopiaUI/kopia-ui

# PulseEffects
#exec --no-startup-id pulseeffects --gapplication-service

# activate flameshot
exec --no-startup-id flameshot &

# notifications
#exec --no-startup-id /usr/bin/dunst &

##############################
#     Keyboard shortcuts     #
##############################

#pavucontrol
bindsym control+mod1+u exec --no-startup-id pavucontrol;focus

# joplin
bindsym control+mod1+n exec --no-startup-id joplin-desktop;focus

#texteditors
bindsym ctrl+mod1+e exec --no-startup-id emacs;focus

# file manager
bindsym ctrl+mod1+t exec --no-startup-id nemo;focus

#libreoffice
bindsym ctrl+mod1+l exec --no-startup-id libreoffice;focus

#browsers
bindsym control+mod1+f exec --no-startup-id firefox;focus

# jellyamp
#bindsym ctrl+mod1+m exec --no-startup-id "env DESKTOPINTEGRATION=false /usr/bin/Jellyamp";focus

# jellyfin media player
bindsym ctrl+mod1+j exec --no-startup-id jellyfinmediaplayer;focus

# mail
bindsym ctrl+mod1+b exec --no-startup-id thunderbird;focus

##############################
#        Screenshots         #
##############################

bindsym Print exec --no-startup-id flameshot gui
bindsym Control+Print exec --no-startup-id flameshot gui -d 2000


##############################
#   Audio & Media Control    #
##############################

bindsym XF86AudioRaiseVolume exec --no-startup-id bash $HOME/scripts/dunst-volume.sh up
bindsym XF86AudioLowerVolume exec --no-startup-id  bash $HOME/scripts/dunst-volume.sh down
bindsym XF86AudioMute exec --no-startup-id bash $HOME/scripts/dunst-volume.sh mute
bindsym XF86AudioPlay exec --no-startup-id ~/scripts/polybar/player-mpris-tail.py play-pause &
bindsym XF86AudioNext exec --no-startup-id ~/scripts/polybar/player-mpris-tail.py next &
bindsym XF86AudioPrev exec --no-startup-id ~/scripts/polybar/player-mpris-tail.py previous &
bindsym XF86AudioStop exec --no-startup-id playerctl stop

##############################
#         xbacklight         #
##############################

bindsym $mod+Shift+u exec --no-startup-id bash $HOME/scripts/dunst-backlight.sh up # increase screen brightness
bindsym $mod+Shift+d exec --no-startup-id bash $HOME/scripts/dunst-backlight.sh down # decrease screen brightness
bindsym XF86MonBrightnessUp exec --no-startup-id bash $HOME/scripts/dunst-backlight.sh up # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id bash $HOME/scripts/dunst-backlight.sh down # decrease screen brightness

##############################
#          Borders           #
##############################

default_border pixel 2

############################################################
#####           More from the sample config            #####
############################################################

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %H:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# Start sway-session.target for sway-specific stuff and import environment
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"

include @sysconfdir@/sway/config.d/*
